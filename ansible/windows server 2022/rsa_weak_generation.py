from Crypto.PublicKey import RSA
from Crypto.Math.Numbers import Integer
from Crypto.Util import number

# function to generate a rsa key pair by chosing the key lenght, p and q
# CAUTION: it's not recommended to generate from the constructor
def generate_rsa_key(bits, p, q):
    n = p * q
    e = 65537
    phi = (p - 1) * (q - 1)
    d = int(Integer(e).inverse(Integer(phi)))

    key = RSA.construct((n, e, d, p, q))
    return key

# rsa key size
bits = 4096
# Making sure that p and q are really close so that they are
# crackable with Fermat's little theorem (1502 of difference)
p = 30989413979221186440875537962143588279079180657276785773483163084840787431751925008409382782024837335054414229548213487269055726656919580388980384353939415484564294377142773553463724248812140196477077493185374579859773369113593661078143295090153526634169495633688691753691720088511452131593712380121967802013042678209312444897975134224456911144218687330712554564836016616829044029963400114373142702236623994027926718855592051277298418373056707389464234977873660836337340136755093657804153998347162906059312569124331219753644648657722107663012261197728061352359157767204739644300066112274629356310784052940617408518123
q = 30989413979221186440875537962143588279079180657276785773483163084840787431751925008409382782024837335054414229548213487269055726656919580388980384353939415484564294377142773553463724248812140196477077493185374579859773369113593661078143295090153526634169495633688691753691720088511452131593712380121967802013042678209312444897975134224456911144218687330712554564836016616829044029963400114373142702236623994027926718855592051277298418373056707389464234977873660836337340136755093657804153998347162906059312569124331219753644648657722107663012261197728061352359157767204739644300066112274629356310784052940617408516621

# generate key pair with our custom p and q 
rsa_key = generate_rsa_key(bits, p, q)

# save in a file the private key
with open("id_rsa_ssh_private.pem", "wb") as f:
    f.write(rsa_key.export_key())

# save in a file the public key in OpenSSH format
# make sure to add the content on authorized_keys followed by 'username@hostname'
with open("id_rsa_ssh_public.pub", "wb") as f:
    f.write(rsa_key.publickey().export_key(format="OpenSSH"))
